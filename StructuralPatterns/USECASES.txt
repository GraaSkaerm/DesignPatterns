STRUCTUAL PATTERNS

1::ADAPTER PATTERN

	USE CASES::
		USE WHEN A DIFFRENT INTERFACE SHOULD WORK WITH ANOTHER
		USE WHEN YOU HAVE TO WORK WITH DIFFERENT INTERFACES THAT HAS SIMILAR BEHAVIORS/IMPLEMENTATION


2::BRIDGE PATTERN
	USE CASES::
		USE WHEN AN OBJECT SHOULD INHERINT FUNCTIONALITY OF ANOTHER OBJECT
		FX SHAPE AND COLORS

3::COMPOSIT PATTERN
	USE CASES::
		USE WHEN WE NEED TO TREAT A GROUP OF OBJECTS IN SIMILAR WAY AS A SINGLE OBJECT


4::DECORATOR PATTERN
	USE CASES::
		Brug til at tilføje yderlig funktionalitet til en funktion, i mens at programmet køre.
		USE WHEN YOU WANT TO ADD FUNCTIONALITY TO A FUNCTION UNDER RUNTIME
		USE WHEN YOU WANT TO ADD FUNCTIONALITY TO A FUNCTION WITHOUT CHANGING IT

		EXAMPLES:
		- MAKING PIZZA
		- ADDING NOTIFICATION RECIVERS

5::FACADE PATTERN
	USE CASES::
		Brug til at gøre et komplekst system simplerer.
		USE FACADE TO SIMPLIFY A CLASS OR SYSTEM

6::FLYWEIGHT PATTERN
	USE CASES::
		Brug til genanvndelig data. Fx texturer, typer osv.
		USE TO STORE IDENTICAL VARIABELS OF AN OBJECT IF ITS USED A LOT

7::PROXY PATTERN
	USE CASES::
		USE TO ACCES ANOTHER OBJECT AND CONTROL IF SOMETHING SHOULD HAPPEN BEFORE OR AFTER THE OBJECTS FUNTIONALITY
		USE WHEN YOU WANT TO CONTROL ACCESABILITY TO ANOTHER OBJECT



ADAPTER:: PROVIDES A DIFFERENT INTERFACES TO THE WRAPPED OBJECT
PROXY:: PROVIDES THE SAME INTERFACE TO THE WRAPPED OBJECT
